Mon
made outline document. I think I remembered most of the product features I was interested in

Made initial layout in UiEditor

The prog was prompting me when I hit save, so I looked and the name said Form1 for the 
so I set the caption to MazeBuilder 1.0 (b) for beta, then changed back to look at the name field (I saw it matching the change to Caption) and then the preview form disappeared and the main window was unresponsive. I had to kill the editor without saving.

Recalling the undo file I snapshotted everything in the InForm directory, and tried tinkering with the undo function, finding that I could advance the "head" of the undo by just making or moving widgets around. After that copying UiEditorUndo.dat from my snapshot made the undo command restore my lost layout.  Neat

Appears that can-have-focus doesn't work, for buttons, at least; modeified .frm to explicitly set values to false

Couldn't get begindraw to work on my PB, no matter what

Tues
Made a repo for MazeBuilder

Weds
Adapting my old code. I expect it to take really really well

Will I need the control ID to be derive-able from the name of picture box jigsaws?  I don't think so.

---
Here comes the project's first big design decision: how to implement my group of tiles?

I think I need to use two widgets per tile: a frame to move and detect clicks, and a PB to display my tile offset by an amount (x,y) of course.

Thurs
Updated repo

Fri
Have a really frustrating and annoying experience with List Box control items not being selectable on a particular List

Sat

I've gradually realized because of the hackery I employ to display tiles, and how InForm's hover function presently only gives the top widget's ID, I'll have to write helper functions for every little thing. Hopefully it didn't create too much work.

On the other hand, writing up the event functions *feels* easy.

I'm tired of writing translations of indexing systems.

Zordering seems to fail as pertains to frames. specifically when no child (contained) widgets's ordered above its parent then no widget can be above the frame, regardless of order, but this is inconsistent & to be above the frame a widget would need to be above all child widgets of frame.
As the zorder dialog list shows order to be first-created:lowest z, there should be no trouble creating a frame and then its children programmatically, but to reiterate, this might be inconsistent.

Lacking any clue, I will probably just drop a few features and revert to a simpler implementation mainly right now I need a hint to continue, about what can be done about controlling zorder


Sun
Did a little debugging, uploaded to the hub

The 'Doi!' moment of the day was when I realized my brilliant extender function as written functioned only for parent-less widgets. Oddly enough however, though the control's I had intended to target would still be trapped by the routine, my custom event handler AreaClick did not work as I had wanted, in that it mistranslated its input parameters to the ControlSweep sub. Groan

STATE OF THE PROJECT

World expand feature really stalled. I left half of the insert-line functionality unmade. insert row has to be tested 1st

Mouse drag has not been set up, but rmb on the area works

horizontal scrolling is set for trial

Still to do is the zoom routines set

functions that don't work are cancelrsz, MapResource, left clicking.  wait... really?
================================================

Regarding undo, my implementation idea starts to form. since the undoable actions largely take place exclusively in view, delta areas can be copied and cataloged as they are changed. as long as they're given the same calcs for mapping as the normal sync routine, they'll be all that's needed 

NTS: remember, when you set up a timer based sub to merge a rooms delta with the main rooms(), to check at the start and at the end whether an edit occurs during the merge, and mark the merge partial in such a case

Wed
Spent some time plotting how to simplify my design. No time to work on MB this week. I may need to scrap the scroll-n-zoom style interface because I lack time to figure out the calculations and such, but there is no reason I couldn't implement a paged presentation instead, on top of what I've made so far.

10/18
various business prevents me from updating this project, but I'm hoping to have time to get back on it before the month is out.


[errors seen record]
723 in InForm.ui when resizing
5097 when working a dd list

723 (& 2089 ) when trying to resize (667, 819 when resizing smaller)
724, 799 + 723 in InForm.ui when resizing



Tues 10/31
I think I'll modify the InForm control type to hold additional values, enabling me to use a range of widgets as data containers

Wed
I had an epiphany after I decided to re-do the majority of my input handling code. even before I tried InForm's built in capability I suspected I'd need to customize some of the routines, as it became apparent the framework doesn't support overlapping widgets the way I needed it to.  while it's very frustrating, I felt I could crack the puzzle of something  , but my mouse buttons went crazy each time I ran the project.

Turns out I was setting my double click detector in the mouse down sub, which of course would eradicate the previous stored value, making it depend on the duration between mouse down and mouse up rather than two mouse up's as I intended.  this was a major breakthrough, at least in the area of morale, as I found myself in charge again for the time being.

Thurs
Something I realized that could have caused trouble down the road was the range of widgets I would set up, and then refer to: the problem was my routine for swapping around widgets, to affect z order... I'd need to update the controlrange.min and .max, but I've decided that a more flexible way would be to ask Fellippe to insert a separate array for display order. I've thought up a function or two that should suffice for manipulating this order in the face of requirements such as I described, placing selected items higher & more visible while leaving alone the control array, as seems proper

I made a programming blunder today that makes me ashamed. Without asking the developer of InForm if he was willing to commit to a new way of storing his z orders, I spent 2 hours working out a sub to finely control the z order under that hypothetical system. Of course I never imagined it would take me that long, but this is the kind of decisionmaking which leads to wasting of time, and however effective the result, is simply not worth the input labor. My project was set back a long time because of this.


Sun
Inform Editor crapped out yesterday. Began to suddenly speak about unable to load its Preview Component. Rebuilding the program solved this

Ended the day completing
expandrooms - main sub to alter the maze data arrays
adjusted how maze view setup is called, hopefully paving the way for a generalized call

Also worked on
showpath - new prototype draw commands
page switch functionality
download of the buffer
upload sub (began)

I noticed that child-less frames are always drawn last, making them useful as masks - but difficult to understand for a novice unfamiliar with the drawing order in InForm

Mon
I've encountered additional work, in the form of my paths arrays all requiring translation. it seems that 80% of programming is translation functions, and any attempts to circumvent that are just silliness.

Done also: CarryConnections, WipePath. tileclear? addmodifier..?

Stared for a long while at markdownpage 
While working on the uploadview sub I realized that my plan for having a paths buffer/library array was doomed. here's the problem: I'm trying to avoid translating every single path end from non-buffer to buffer value. but my iterater which is how I wanted uploadview to go, can't handle the task. iterating a second time might do it, actually, but this implementation would be quite slow when zoomed out, given the repeated view changes I envision when scrolling. more evidence that both scrolling and zooming might be out of the question. looks like I should've never gone with this fancy data inter-storing. but I can think of novel solutions tomorrow at work. one thing that presents itself, when user moves or deletes a room with a path connecting outside of the current view, then manually change the view to encompass the absent path ends, prior to enacting. the view will thus never need to hold unchangable links

in my next project, I'll just write translation functions from the beginning, until I run out of desire or my eyes bleed, and then if I still want to look at a qbasic window again, I'll do the rest of the project after.

Tues
Tested out my page changing routines. found a bug with path removes. at this point I see a fault in either markdown or uploadview causing the rebuffer to fail. I only loaded about 5 pages before it got unbearably slow. it's time to consider pseudo controls for larger zoomed views - replacing the frames I currently have containing each of my tiles; on the other hand it doesn't appear as though large zooms will be feasible anyway, except with high resolution room graphics, which amounts to the same thing. so as it is the application should grade just under the performance degrade point, on this platform anyway. For paths I think I'm going to keep off view ends stored as a -1 indicating that that end should remain unedited while the end coming in view can be changed as required by room moves. room deletes however will need special treatment

Thurs
found a careless error with range checks when uploading paths
focusing on page switching
why won't doubleclick detection work...
added diagnostic commands to reloadview, but it broke the entire program somehow

Fri
Despondent

nts: room deletes will need one to backtrack thru past -1 destinations to clr out the real element. suggest using elab string to demark such, while during markdown, location of -1 marker will suggest target room

Went with .rmd for builder files extension. I abandoned my former data file layout because the read sub I wrote simply DID NOT WORK. *To be exact, it worked sporadically and unpredictably. I suspect an OS or hard disk fail

Sat
the undo business has taken forever to write. testing with 5 calls to actionbuffer placed. result: total, complete malfunction, instability and loss of goodness


carryconnections functional update: prevent overlaps - delayed

Sun
No one would believe me if I told them how I spent all day
I'm never going to write another file reading or file writing routine again. either the cloud can have my data, or I'll just bug other programmers to write my junk. or hire them!
I settled on eventually using a static geographic size with a simple formula to relate the sizes of my saved things. feels like old skool proc'cing. I guess other programmers would avoid the trouble more modernly, by using multiple files per save operation, splitting up their structures into separate files. I admit to feeling jealous of these, now, in hindsight

I'm looking fwd to implementing my various overlaid dialogs. I might even try an animation or two

added an exitsub to mouse_up, see if that plays okay


double click response HAS to work! this is how the instructions should look:
clickerdown
    AreaCursor.dclickstart = NextTime(dblclick_thresh)

clickerup
delay handling, if before .dclickstart

if exceed .dclickstart, throw own clickerup

2ndclickerdown
don't act

2ndclickerup - yes, success set dclickfire


Monday
It does appear that my computer system is messed up, or virused. I will need some time to get another hard drive loaded up. I'll then want to test my last few builds, to see whether the disk access subs show improvement.

Fri
isolated the sub giving strange behavior, but cause is mysterious
partial working out of maze profile save code
no clue why, but link writer sub doesn't accept more than one elab value


Mon

My check of the library array for room links always returned no match, and this was messing up my addpath sub. turns out for rewrite #3, I forgot to update my parameter in the sub declaration. I guess I really should never have attempted this degree of complexity. it makes me feel like the project is de-valued when it takes this long to crank out. I'd rather be doing something else w my time
